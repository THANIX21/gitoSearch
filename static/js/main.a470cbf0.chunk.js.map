{"version":3,"sources":["components/Home.js","components/Button.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","name","children","Button","id","onClick","btnFunk","btnName","arr","App","handleSearchChange","event","setState","searchTerm","target","value","displayResults","resLength","container","document","getElementById","innerHTML","itmNo","content","owner","login","html_url","description","forks_count","stargazers_count","open_issues","searchGit","fetch","state","then","res","json","data","items","length","className","type","this","onChange","bind","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"yOAaeA,G,MAXF,SAACC,GACV,OACI,gCACI,6BACKA,EAAMC,OAEVD,EAAME,cCCJC,EAPA,SAAAH,GACX,OACI,wBAAQI,GAAIJ,EAAMI,GAAIC,QAASL,EAAMM,QAArC,SAA+CN,EAAMO,WCCzDC,EAAM,GA4EKC,E,kDAzEb,WAAYT,GAAQ,IAAD,8BACjB,cAAMA,IAQRU,mBAAqB,SAACC,GACpB,EAAKC,SAAS,CACVC,WAAYF,EAAMG,OAAOC,SAXZ,EAgBnBC,eAAiB,SAAAC,GACf,IAAMC,EAAYC,SAASC,eAAe,WAC1CF,EAAUG,UAAY,GAEtB,IAAK,IAAIC,EAAQ,EAAGA,EAAQL,EAAWK,IAAS,CAE9C,IAAMC,EAAO,kIAIDf,EAAIc,GAAOrB,KAJV,kCAKDO,EAAIc,GAAOE,MAAMC,MALhB,+CAMYjB,EAAIc,GAAOI,SANvB,YAMmClB,EAAIc,GAAOI,SAN9C,iDAOU,KAAOlB,EAAIc,GAAOK,YAP5B,sCAQI,WAAanB,EAAIc,GAAOM,YAR5B,2CASS,MAAQpB,EAAIc,GAAOO,iBAT5B,4CAUU,KAAOrB,EAAIc,GAAOQ,YAV5B,kFAgBbZ,EAAUG,WAAaE,IAtCR,EA0CnBQ,UAAY,WACVC,MAAM,gDAAD,OAAiD,EAAKC,MAAMpB,aAC9DqB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ7B,EAAM6B,EAAKC,MACX,EAAKtB,eAAeR,EAAI+B,YA5C5B,EAAKN,MAAQ,CACXpB,WAAY,IAJG,E,qDAqDjB,OACE,sBAAK2B,UAAU,MAAf,UACE,cAAC,EAAD,CAAMvC,KAAK,eACX,+BACI,8BACI,uBACAwC,KAAK,OACL1B,MAAO2B,KAAKT,MAAMpB,WAClB8B,SAAUD,KAAKhC,mBAAmBkC,KAAKF,YAI/C,cAAC,EAAD,CAAQtC,GAAG,YAAYG,QAAQ,gBAAgBD,QAASoC,KAAKX,UAAUa,KAAKF,QAC5E,qBAAKtC,GAAG,mB,GAnEEyC,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrC,SAASC,eAAe,SAM1B0B,M","file":"static/js/main.a470cbf0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Home = (props) => {    \r\n    return(\r\n        <div>\r\n            <h1>\r\n                {props.name}\r\n            </h1>\r\n            {props.children}\r\n        </div>\r\n    )  \r\n}\r\n\r\nexport default Home","import React from 'react'\r\n\r\nconst Button = props =>  { \r\n    return(        \r\n        <button id={props.id} onClick={props.btnFunk}>{props.btnName}</button>\r\n        \r\n    )          \r\n}\r\n\r\nexport default Button","import React, {Component} from 'react';\nimport './App.css';\nimport Home from './components/Home';\nimport Button from './components/Button';\n\nvar arr = [];\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    \n    this.state = {\n      searchTerm: ''                       \n    }    \n\n  }   \n\n  handleSearchChange = (event) => { //change variable as it is entered\n    this.setState({\n        searchTerm: event.target.value\n      }\n    )\n  }  \n\n  displayResults = resLength => { //get area to inject search results dynamically and add html to describe every search result\n    const container = document.getElementById('results');\n    container.innerHTML = '';\n\n    for (var itmNo = 0; itmNo < resLength; itmNo++) {        \n      \n      const content = `\n      <div class=\"container\">\n        <div class=\"card\">\n          <div class=\"front\">            \n            <h2>${arr[itmNo].name}</h2>\n            <h3>${arr[itmNo].owner.login}</h3>\n            <p>URL : <a href=${arr[itmNo].html_url}>${arr[itmNo].html_url}</a> </p>\n            <p>Description:${'  ' + arr[itmNo].description}</p>\n            <p>Forks:${'        ' + arr[itmNo].forks_count}</p>\n            <p>Stargazers:${'   ' + arr[itmNo].stargazers_count}</p>\n            <p>Open Issues:${'  ' + arr[itmNo].open_issues}</p>\n          </div>          \n        </div>\n      </div>        \n      `;\n\n      container.innerHTML += content;            \n    }\n  }   \n  \n  searchGit = () => { //retrieve data, convert to json and store items in array for easy access   \n    fetch(`https://api.github.com/search/repositories?q=${this.state.searchTerm}`)\n      .then(res => res.json())\n      .then(data => {\n        arr = data.items;        \n        this.displayResults(arr.length);               \n      }\n    ) \n  }  \n\n  render () { //render homescreen, search button and result area to display data to be injected later\n    return (      \n      <div className=\"App\">        \n        <Home name=\"gitoSearch\" />\n        <form> \n            <div>\n                <input \n                type='text' \n                value={this.state.searchTerm} \n                onChange={this.handleSearchChange.bind(this)}                 \n                />                             \n            </div>\n        </form>         \n        <Button id=\"SearchBtn\" btnName=\"Search Github\" btnFunk={this.searchGit.bind(this)} />  \n        <div id=\"results\">                                         \n        </div>                                                    \n      </div>       \n    )\n  }    \n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}